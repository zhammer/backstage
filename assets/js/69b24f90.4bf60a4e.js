/*! For license information please see 69b24f90.4bf60a4e.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[831728],{603905:(t,e,r)=>{r.d(e,{Zo:()=>p,kt:()=>m});var n=r(667294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function l(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function c(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var o=n.createContext({}),s=function(t){var e=n.useContext(o),r=e;return t&&(r="function"==typeof t?t(e):l(l({},e),t)),r},p=function(t){var e=s(t.components);return n.createElement(o.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},f=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,i=t.originalType,o=t.parentName,p=c(t,["components","mdxType","originalType","parentName"]),u=s(r),f=a,m=u["".concat(o,".").concat(f)]||u[f]||d[f]||i;return r?n.createElement(m,l(l({ref:e},p),{},{components:r})):n.createElement(m,l({ref:e},p))}));function m(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=r.length,l=new Array(i);l[0]=f;var c={};for(var o in e)hasOwnProperty.call(e,o)&&(c[o]=e[o]);c.originalType=t,c[u]="string"==typeof t?t:a,l[1]=c;for(var s=2;s<i;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},374008:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>p,contentTitle:()=>o,default:()=>f,frontMatter:()=>c,metadata:()=>s,toc:()=>u});r(827378);var n=r(603905);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){return e=null!=e?e:{},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):function(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}(Object(e)).forEach((function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(e,r))})),t}function l(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}const c={id:"plugin-cicd-statistics",title:"@backstage/plugin-cicd-statistics",description:"API Reference for @backstage/plugin-cicd-statistics"},o=void 0,s={unversionedId:"reference/plugin-cicd-statistics",id:"reference/plugin-cicd-statistics",title:"@backstage/plugin-cicd-statistics",description:"API Reference for @backstage/plugin-cicd-statistics",source:"@site/../docs/reference/plugin-cicd-statistics.md",sourceDirName:"reference",slug:"/reference/plugin-cicd-statistics",permalink:"/docs/reference/plugin-cicd-statistics",draft:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/reference/plugin-cicd-statistics.md",tags:[],version:"current",frontMatter:{id:"plugin-cicd-statistics",title:"@backstage/plugin-cicd-statistics",description:"API Reference for @backstage/plugin-cicd-statistics"}},p={},u=[{value:"Classes",id:"classes",level:2},{value:"Functions",id:"functions",level:2},{value:"Interfaces",id:"interfaces",level:2},{value:"Variables",id:"variables",level:2},{value:"Type Aliases",id:"type-aliases",level:2}],d={toc:u};function f(t){var{components:e}=t,r=l(t,["components"]);return(0,n.kt)("wrapper",i(function(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable})))),n.forEach((function(e){a(t,e,r[e])}))}return t}({},d,r),{components:e,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/docs/reference/"},"Home")," ",">"," ",(0,n.kt)("a",{parentName:"p",href:"/docs/reference/plugin-cicd-statistics"},(0,n.kt)("inlineCode",{parentName:"a"},"@backstage/plugin-cicd-statistics"))),(0,n.kt)("h2",{id:"classes"},"Classes"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Class"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.aborterror"},"AbortError")),(0,n.kt)("td",{parentName:"tr",align:null},"If the Api implements support for aborting the fetching of builds, throw an AbortError of this type (or any other error with name === 'AbortError').")))),(0,n.kt)("h2",{id:"functions"},"Functions"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Function"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.entitypagecicdcharts"},"EntityPageCicdCharts()")),(0,n.kt)("td",{parentName:"tr",align:null})))),(0,n.kt)("h2",{id:"interfaces"},"Interfaces"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Interface"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.build"},"Build")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("p",null,"Generic Build type."),(0,n.kt)("p",null,"A build has e.g. a build type (master/branch), a status and (possibly) sub stages."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.cicdconfiguration"},"CicdConfiguration")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("p",null,"A configuration interface which the Api must implement."),(0,n.kt)("p",null,"When the UI for the CI/CD Statistics is loaded, it begins with fetching the configuration before anything else."),(0,n.kt)("p",null,"All of these fields are optional though, and will fallback to hard-coded defaults."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.cicddefaults"},"CicdDefaults")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("p",null,"Default settings for the fetching options and view options."),(0,n.kt)("p",null,"These are all optional, but can be overridden from the Api to whatever makes most sense for that implementation."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.cicdstate"},"CicdState")),(0,n.kt)("td",{parentName:"tr",align:null},"The result type for ",(0,n.kt)("code",null,"fetchBuilds"),".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.cicdstatisticsapi"},"CicdStatisticsApi")),(0,n.kt)("td",{parentName:"tr",align:null},"The interface which is mapped to the ",(0,n.kt)("code",null,"cicdStatisticsApiRef")," which is used by the UI.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.fetchbuildsoptions"},"FetchBuildsOptions")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("p",null,"When fetching, the Api should fetch build information about the ",(0,n.kt)("code",null,"entity")," and respect the ",(0,n.kt)("code",null,"timeFrom"),", ",(0,n.kt)("code",null,"timeTo"),", ",(0,n.kt)("code",null,"filterStatus")," and ",(0,n.kt)("code",null,"filterType"),"."),(0,n.kt)("p",null,"Optionally implement support for ",(0,n.kt)("code",null,"updateProgress")," and ",(0,n.kt)("code",null,"abortSignal")," if preferred."),(0,n.kt)("p",null,"When the UI re-fetches, it will abort any previous fetching, so polling ",(0,n.kt)("code",null,"abortSignal.aborted"),", and possibly throwing an ",(0,n.kt)("code",null,"AbortError"),", can be useful."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.getconfigurationoptions"},"GetConfigurationOptions")),(0,n.kt)("td",{parentName:"tr",align:null},"When reading configuration, the Api can return a custom settings depending on the entity being viewed.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.stage"},"Stage")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("p",null,"A Stage is a part of either a Build or a parent Stage."),(0,n.kt)("p",null,"This may be called things like Stage or Step or Task in CI/CD systems, but is generic here. There's also no concept of parallelism which might exist within some stages."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.updateprogress"},"UpdateProgress")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("p",null,"When fetching, if applicable, the Api can feedback progress back to the UI."),(0,n.kt)("p",null,"Use the ",(0,n.kt)("code",null,"updateProgress(completed, total, started?)")," to signal that ",(0,n.kt)("code",null,"completed")," builds out of a ",(0,n.kt)("code",null,"total")," has finished. Optionally use the ",(0,n.kt)("code",null,"started")," to signal how many builds have been started in total (i.e. at least the amount of ",(0,n.kt)("code",null,"completed"),")."),(0,n.kt)("p",null,"This can be called at any rate. Rate limiting (debouncing) is implemented in the UI."),(0,n.kt)("p",null,"Optionally this can signal multiple progresses in several steps"))))),(0,n.kt)("h2",{id:"variables"},"Variables"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Variable"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.cicdstatisticsapiref"},"cicdStatisticsApiRef")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.cicdstatisticsplugin"},"cicdStatisticsPlugin")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.entitycicdstatisticscontent"},"EntityCicdStatisticsContent")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.statustypes"},"statusTypes")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.triggerreasons"},"triggerReasons")),(0,n.kt)("td",{parentName:"tr",align:null})))),(0,n.kt)("h2",{id:"type-aliases"},"Type Aliases"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type Alias"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.buildwithraw"},"BuildWithRaw")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("p",null,"Helper type which is a Build with a certain typed 'raw' field."),(0,n.kt)("p",null,"This can be useful in an Api to use while mapping internal data structures (raw) into generic builds."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.charttype"},"ChartType")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("p",null,"Chart type."),(0,n.kt)("p",null,"Values are: ","*"," ",(0,n.kt)("code",null,"duration"),": shows an area chart of the duration over time ","*"," ",(0,n.kt)("code",null,"count"),": shows a bar chart of the number of build per day"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.charttypes"},"ChartTypes")),(0,n.kt)("td",{parentName:"tr",align:null},"Chart types.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.filterbranchtype"},"FilterBranchType")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("p",null,"The branch enum of either 'master' or 'branch' (or possibly the meta 'all')."),(0,n.kt)("p",null,"The concept of what constitutes a master branch is generic. It might be called something like 'release' or 'main' or 'trunk' in the underlying CI/CD system, which is then up to the Api to map accordingly."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.filterstatustype"},"FilterStatusType")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("p",null,"This is a generic enum of build statuses."),(0,n.kt)("p",null,"If all of these aren't applicable to the underlying CI/CD, these can be configured to be hidden, using the ",(0,n.kt)("code",null,"availableStatuses")," in ",(0,n.kt)("code",null,"CicdConfiguration"),"."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/reference/plugin-cicd-statistics.triggerreason"},"TriggerReason")),(0,n.kt)("td",{parentName:"tr",align:null})))))}f.isMDXComponent=!0},862525:t=>{var e=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;function a(t){if(null==t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}t.exports=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},r=0;r<10;r++)e["_"+String.fromCharCode(r)]=r;if("0123456789"!==Object.getOwnPropertyNames(e).map((function(t){return e[t]})).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach((function(t){n[t]=t})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(a){return!1}}()?Object.assign:function(t,i){for(var l,c,o=a(t),s=1;s<arguments.length;s++){for(var p in l=Object(arguments[s]))r.call(l,p)&&(o[p]=l[p]);if(e){c=e(l);for(var u=0;u<c.length;u++)n.call(l,c[u])&&(o[c[u]]=l[c[u]])}}return o}},541535:(t,e,r)=>{var n=r(862525),a=60103,i=60106;var l=60109,c=60110,o=60112;var s=60115,p=60116;if("function"==typeof Symbol&&Symbol.for){var u=Symbol.for;a=u("react.element"),i=u("react.portal"),u("react.fragment"),u("react.strict_mode"),u("react.profiler"),l=u("react.provider"),c=u("react.context"),o=u("react.forward_ref"),u("react.suspense"),s=u("react.memo"),p=u("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function f(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,r=1;r<arguments.length;r++)e+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g={};function h(t,e,r){this.props=t,this.context=e,this.refs=g,this.updater=r||m}function k(){}function b(t,e,r){this.props=t,this.context=e,this.refs=g,this.updater=r||m}h.prototype.isReactComponent={},h.prototype.setState=function(t,e){if("object"!=typeof t&&"function"!=typeof t&&null!=t)throw Error(f(85));this.updater.enqueueSetState(this,t,e,"setState")},h.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")},k.prototype=h.prototype;var y=b.prototype=new k;y.constructor=b,n(y,h.prototype),y.isPureReactComponent=!0;var N={current:null},v=Object.prototype.hasOwnProperty,O={key:!0,ref:!0,__self:!0,__source:!0};function w(t,e,r){var n,i={},l=null,c=null;if(null!=e)for(n in void 0!==e.ref&&(c=e.ref),void 0!==e.key&&(l=""+e.key),e)v.call(e,n)&&!O.hasOwnProperty(n)&&(i[n]=e[n]);var o=arguments.length-2;if(1===o)i.children=r;else if(1<o){for(var s=Array(o),p=0;p<o;p++)s[p]=arguments[p+2];i.children=s}if(t&&t.defaultProps)for(n in o=t.defaultProps)void 0===i[n]&&(i[n]=o[n]);return{$$typeof:a,type:t,key:l,ref:c,props:i,_owner:N.current}}function j(t){return"object"==typeof t&&null!==t&&t.$$typeof===a}var P=/\/+/g;function S(t,e){return"object"==typeof t&&null!==t&&null!=t.key?function(t){var e={"=":"=0",":":"=2"};return"$"+t.replace(/[=:]/g,(function(t){return e[t]}))}(""+t.key):e.toString(36)}function C(t,e,r,n,l){var c=typeof t;"undefined"!==c&&"boolean"!==c||(t=null);var o=!1;if(null===t)o=!0;else switch(c){case"string":case"number":o=!0;break;case"object":switch(t.$$typeof){case a:case i:o=!0}}if(o)return l=l(o=t),t=""===n?"."+S(o,0):n,Array.isArray(l)?(r="",null!=t&&(r=t.replace(P,"$&/")+"/"),C(l,e,r,"",(function(t){return t}))):null!=l&&(j(l)&&(l=function(t,e){return{$$typeof:a,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}(l,r+(!l.key||o&&o.key===l.key?"":(""+l.key).replace(P,"$&/")+"/")+t)),e.push(l)),1;if(o=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var p=n+S(c=t[s],s);o+=C(c,e,r,p,l)}else if(p=function(t){return null===t||"object"!=typeof t?null:"function"==typeof(t=d&&t[d]||t["@@iterator"])?t:null}(t),"function"==typeof p)for(t=p.call(t),s=0;!(c=t.next()).done;)o+=C(c=c.value,e,r,p=n+S(c,s++),l);else if("object"===c)throw e=""+t,Error(f(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e));return o}function T(t,e,r){if(null==t)return t;var n=[],a=0;return C(t,n,"","",(function(t){return e.call(r,t,a++)})),n}function A(t){if(-1===t._status){var e=t._result;e=e(),t._status=0,t._result=e,e.then((function(e){0===t._status&&(e=e.default,t._status=1,t._result=e)}),(function(e){0===t._status&&(t._status=2,t._result=e)}))}if(1===t._status)return t._result;throw t._result}var E={current:null};function _(){var t=E.current;if(null===t)throw Error(f(321));return t}},827378:(t,e,r)=>{r(541535)}}]);